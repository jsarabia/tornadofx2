buildscript {
    apply from: './dependencies.gradle'

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.javamodularity:moduleplugin:1.7.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

/**
 * Gradle version 6.6.1
 */
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'java-library'
    id 'maven'
    id 'org.openjfx.javafxplugin' version "0.0.9"
    id "org.jetbrains.dokka" version "1.4.20"
    id 'org.javamodularity.moduleplugin' version '1.7.0'
}

group = "no.tornado"
version = "2.1.0"
description = "JavaFX Framework for Kotlin"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"

    api "org.glassfish:javax.json:${json_version}"
    api "org.apache.httpcomponents:httpclient:${httpclient_version}"
    api "de.jensd:fontawesomefx-fontawesome:${fontawesomefx_version}"
    implementation"org.apache.felix:org.apache.felix.framework:${felix_framework_version}"
}

javafx {
    version = "15.0.1"
    modules = ["javafx.controls", "javafx.fxml", "javafx.swing", "javafx.web", "javafx.media"]
}

sourceCompatibility = 11

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

java.withSourcesJar()

/**
 * Testing
 */
sourceSets {
    getByName("test").java.srcDirs("src/test/kotlin")
}


test {
    useJUnitPlatform()
    moduleOptions {
        runOnClasspath = true
    }
    testLogging {
        events("passed", "skipped", "failed")
    }
}

dependencies {
    //common
    testImplementation "org.hamcrest:hamcrest:${hamcrest_version}"
    testImplementation "org.hamcrest:hamcrest-library:${hamcrest_version}"
    testImplementation "org.testfx:testfx-junit5:${testfx_version}"
    //Junit 5
    testImplementation platform("org.junit:junit-bom:${junit5_version}")
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:${kotlin_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    //Junit 4
    testCompileOnly "junit:junit:${junit4_version}"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    //headless
    testRuntimeOnly "org.testfx:openjfx-monocle:jdk-12.0.1+2" // jdk-9+181 for Java 9, jdk-11+26 for Java 11
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${System.getenv("NEXUS_URL")}/repository/maven-releases") {
                authentication(
                        userName: System.getenv("NEXUS_USER"),
                        password: System.getenv("NEXUS_PASSWORD")
                )
            }
            snapshotRepository(url: "${System.getenv("NEXUS_URL")}/repository/maven-snapshots") {
                authentication(
                        userName: System.getenv("NEXUS_USER"),
                        password: System.getenv("NEXUS_PASSWORD")
                )
            }
            pom.project {
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
            }
        }
    }
}
